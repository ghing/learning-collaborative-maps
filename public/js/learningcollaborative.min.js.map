{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/src/learningcollaborative.js","js/src/views/LearningCollaborativeMap.js"],"names":["_react","require","_reactDom","_xhrPromise","_LearningCollaborativeMap","LearningCollaborativeMapApp","exports","options","xhrPromise","_xhrPromise2","send","method","url","schoolsJSONURL","then","response","_reactDom2","render","_react2","createElement","_LearningCollaborativeMap2","schools","responseText","features","container","_leaflet","LearningCollaborativeMap","createClass","getDefaultProps","center","initialZoom","markerOptions","radius","fillColor","color","weight","opacity","fillOpacity","ref","className","componentDidMount","component","this","map","_leaflet2","refs","mapContainer","setView","props","tileLayer","maxZoom","attribution","addTo","schoolMarkers","geoJson","pointToLayer","feature","latlng","circleMarker","makerOptions","onEachFeature","layer","bindPopup","properties","FacilityName","fitBounds","getBounds"],"mappings":"AAAA;wLCAA,IAAAA,QAAAC,QAAA,gDACAC,UAAAD,QAAA,0DACAE,YAAAF,QAAA,gEAEAG,0BAAAH,QAAA,iHAEaI,4BAAAC,QAAAD,4BAA8B,SAASE,GAClD,GAAIC,GAAa,GAAAC,cAAAA,UAEjBD,GAAWE,MACTC,OAAQ,MACRC,IAAKL,EAAQM,iBACZC,KAAK,SAASC,GACfC,WAAAA,WAASC,OACPC,QAAAA,WAAAC,cAAAC,2BAAAA,YAA0BC,QAASN,EAASO,aAAaC,WACzDhB,EAAQiB;;6ICfd,IAAAC,UAAAxB,QAAA,sDACAD,OAAAC,QAAA,gDAEMyB,yBAA2BR,QAAAA,WAAMS,oDACrCC,gBAAiB,WACf,OACEC,QAAS,UAAW,YACpBC,YAAa,GACbC,eACEC,OAAQ,EACRC,UAAW,UACXC,MAAO,OACPC,OAAQ,EACRC,QAAS,EACTC,YAAa,MAKnBpB,OAAQ,WACN,MAAOC,SAAAA,WAAAC,cAAA,OAAKmB,IAAI,eAAeC,UAAU,yBAG3CC,kBAAmB,WACjB,GAAIC,GAAYC,KACZC,EAAMC,UAAAA,WAAED,IAAID,KAAKG,KAAKC,cACvBC,QAAQL,KAAKM,MAAMnB,OAAQa,KAAKM,MAAMlB,YAEzCc,WAAAA,WAAEK,UAAU,qDACVC,QAAS,GACTC,YAAa,iFACZC,MAAMT,EAET,IAAIU,GAAgBT,UAAAA,WAAEU,QAAQZ,KAAKM,MAAM3B,SACvCkC,aAAc,SAASC,EAASC,GAC9B,MAAOb,WAAAA,WAAEc,aAAaD,EAAQhB,EAAUO,MAAMW,eAEhDC,cAAe,SAASJ,EAASK,GAC/BA,EAAMC,UAAN,2BAA2CN,EAAQO,WAAWC,aAAnB,YAE5CZ,MAAMT,EAETA,GAAIsB,UAAUZ,EAAca,mCAIjBxC","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport XMLHttpRequestPromise from 'xhr-promise';\n\nimport LearningCollaborativeMap from './views/LearningCollaborativeMap'; \n\nexport const LearningCollaborativeMapApp = function(options) {\n  let xhrPromise = new XMLHttpRequestPromise();\n\n  xhrPromise.send({\n    method: 'GET',\n    url: options.schoolsJSONURL\n  }).then(function(response) {\n    ReactDOM.render(\n      <LearningCollaborativeMap schools={response.responseText.features} />,\n      options.container\n    );\n  });\n};\n","import L from 'leaflet';\nimport React from 'react';\n\nconst LearningCollaborativeMap = React.createClass({\n  getDefaultProps: function() {\n    return {\n      center: [41.881832, -87.623177],\n      initialZoom: 13,\n      markerOptions: {\n        radius: 2,\n        fillColor: \"#ff7800\",\n        color: \"#000\",\n        weight: 1,\n        opacity: 1,\n        fillOpacity: 0.8\n      }\n    }\n  },\n\n  render: function() {\n    return <div ref=\"mapContainer\" className=\"map-container-inner\" />; \n  },\n\n  componentDidMount: function() {\n    let component = this;\n    let map = L.map(this.refs.mapContainer)\n      .setView(this.props.center, this.props.initialZoom);\n  \n    L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 18,\n      attribution: 'Map data Â© <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n\n    var schoolMarkers = L.geoJson(this.props.schools, {\n      pointToLayer: function(feature, latlng) {\n        return L.circleMarker(latlng, component.props.makerOptions);\n      },\n      onEachFeature: function(feature, layer) {\n        layer.bindPopup(`<h2 class=\"school-name\">${feature.properties.FacilityName}</h2>`);\n      }\n    }).addTo(map); \n\n    map.fitBounds(schoolMarkers.getBounds());\n  }\n});\n\nexport default LearningCollaborativeMap;\n"]}